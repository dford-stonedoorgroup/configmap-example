apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  generation: 1
  labels:
    app: node-app
  name: node-app
spec:
  replicas: 1
  selector:
    app: node-app
    deploymentconfig: node-app
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: node-app
        deploymentconfig: node-app
    spec:
      containers:
      - env:
        - name: OPENSHIFT_NODEJS_PORT
          value: "8080"
        - name: BACKGROUND_MSG
          valueFrom:
            configMapKeyRef:
              key: message
              name: config
        envFrom:
        - configMapRef:
            name: config
        image: artifactory.prod.travelport.io/node-app-test/node-app:latest
        imagePullPolicy: Always
        name: node-app
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/node-app/
          name: app-config
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: artifactory
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: ui.properties
            path: node-app.config
          name: config
        name: app-config
  test: false
  triggers:
  - type: ConfigChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
